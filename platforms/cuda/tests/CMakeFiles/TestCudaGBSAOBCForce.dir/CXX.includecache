#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/TestCudaGBSAOBCForce.cpp
openmm/internal/AssertionUtilities.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/openmm/internal/AssertionUtilities.h
openmm/Context.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/openmm/Context.h
CudaPlatform.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/CudaPlatform.h
ReferencePlatform.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/ReferencePlatform.h
openmm/GBSAOBCForce.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/openmm/GBSAOBCForce.h
openmm/System.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/openmm/System.h
openmm/LangevinIntegrator.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/openmm/LangevinIntegrator.h
../src/SimTKUtilities/SimTKOpenMMRealType.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/../src/SimTKUtilities/SimTKOpenMMRealType.h
sfmt/SFMT.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/sfmt/SFMT.h
openmm/NonbondedForce.h
/home/saifmulla/openmm/OpenMM/platforms/cuda/tests/openmm/NonbondedForce.h
iostream
-
vector
-

libraries/sfmt/include/sfmt/SFMT.h
stdio.h
-
openmm/internal/windowsExport.h
libraries/sfmt/include/sfmt/openmm/internal/windowsExport.h
inttypes.h
-
inttypes.h
-

olla/include/openmm/Kernel.h
KernelImpl.h
olla/include/openmm/KernelImpl.h
openmm/internal/windowsExport.h
olla/include/openmm/openmm/internal/windowsExport.h

olla/include/openmm/KernelImpl.h
Platform.h
olla/include/openmm/Platform.h
string
-
cassert
-
openmm/internal/windowsExport.h
olla/include/openmm/openmm/internal/windowsExport.h

olla/include/openmm/Platform.h
map
-
string
-
vector
-
openmm/internal/windowsExport.h
olla/include/openmm/openmm/internal/windowsExport.h

openmmapi/include/openmm/Context.h
Integrator.h
openmmapi/include/openmm/Integrator.h
State.h
openmmapi/include/openmm/State.h
System.h
openmmapi/include/openmm/System.h
map
-
string
-
vector
-
internal/windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h

openmmapi/include/openmm/Force.h
internal/windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h

openmmapi/include/openmm/GBSAOBCForce.h
Force.h
openmmapi/include/openmm/Force.h
vector
-
internal/windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h

openmmapi/include/openmm/Integrator.h
State.h
openmmapi/include/openmm/State.h
Vec3.h
openmmapi/include/openmm/Vec3.h
map
-
vector
-
internal/windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h

openmmapi/include/openmm/LangevinIntegrator.h
Integrator.h
openmmapi/include/openmm/Integrator.h
openmm/Kernel.h
openmmapi/include/openmm/openmm/Kernel.h
internal/windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h

openmmapi/include/openmm/NonbondedForce.h
Force.h
openmmapi/include/openmm/Force.h
map
-
set
-
utility
-
vector
-
internal/windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h

openmmapi/include/openmm/State.h
Vec3.h
openmmapi/include/openmm/Vec3.h
map
-
vector
-
internal/windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h

openmmapi/include/openmm/System.h
Vec3.h
openmmapi/include/openmm/Vec3.h
vector
-
internal/windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h

openmmapi/include/openmm/Vec3.h
cassert
-
iosfwd
-

openmmapi/include/openmm/internal/AssertionUtilities.h
windowsExport.h
openmmapi/include/openmm/internal/windowsExport.h
cmath
-
string
-
sstream
-

openmmapi/include/openmm/internal/windowsExport.h

platforms/cuda/./include/CudaPlatform.h
openmm/Platform.h
platforms/cuda/./include/openmm/Platform.h
windowsExportCuda.h
platforms/cuda/./include/windowsExportCuda.h

platforms/cuda/./include/windowsExportCuda.h

platforms/reference/include/../src/SimTKUtilities/SimTKOpenMMRealType.h
cmath
-

platforms/reference/include/ReferencePlatform.h
openmm/Platform.h
platforms/reference/include/openmm/Platform.h
openmm/internal/windowsExport.h
platforms/reference/include/openmm/internal/windowsExport.h

